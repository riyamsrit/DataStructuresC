#include<stdio.h>
#include<alloc.h>
#include<stdlib.h>
#define SIZE 5
struct node
{
int info;
struct node *llink;
struct node *rlink;
};
typedef struct node *NODE;

NODE getnode()
{
NODE x;
x=(NODE)malloc(sizeof(struct node));
if(x==NULL)
{
printf("OUT OF MEMORY\n");
exit(0);
}
return x;
}

NODE insordered(int item,NODE first)
{
NODE prev,curr;
NODE temp=getnode();
temp->info=item;
temp->llink=temp->rlink=NULL;
if(first==NULL) return temp;
if(item<first->info)
{
temp->rlink=first;
first->llink=temp;
return temp;
}
prev=NULL;
curr=first;
if(curr->rlink==NULL)
{
curr->rlink=temp;
temp->llink=curr;
return first;
}

while((curr->info<=item)&&(curr->rlink!=NULL))
{
prev=curr;
curr=curr->rlink;
}
prev->rlink=temp;
temp->rlink=curr;
curr->llink=temp;
temp->llink=prev;
return first;
}

NODE delfront(NODE first)
{
NODE sec;
if(first==NULL)
{
printf("LIST EMPTY\n");
return NULL;
}
if(first->rlink==NULL)
{
printf("%d",first->info);
free(first);
return NULL;
}

sec=first->rlink;
sec->llink=NULL;
printf("%d",first->info);
free(first);
return sec;
}


void display(NODE first)
{
NODE curr;
if(first==NULL)
{
printf("LIST EMPTY\n");
}
curr=first;
while(curr!=NULL)
{
printf("%d",curr->info);
curr=curr->rlink;
}
}

void main()
{
NODE first;
int ch,item,pos;
first=NULL;
do
{
printf("1.INSORDERED 2.DELNTHPOS 3.DISPLAY 4.EXIT\n");
scanf("%d",&ch);
switch(ch)
{
case 1: printf("ENTER ITEM\n");
scanf("%d",&item);
first=insordered(item,first);
break;

case 2: first=delfront(first);
break;

case 3: display(first);
break;

case 4:exit(0);
}
}while(ch<=4);
}

