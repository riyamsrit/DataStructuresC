#include<stdio.h>
#include<stdlib.h>
#define SIZE 20

struct node
{
int info;
struct node*link;
};
typedef struct node *NODE;

NODE getnode()
{
NODE x;
x=(NODE) malloc(sizeof(struct node));
if(x==NULL)
{
printf("OUT OF MEMORY");
exit(0);
}
return x;
}
NODE insfront(int item,NODE first)
{
NODE temp=getnode();
temp->info=item;
if(first==NULL)
temp->link=first;
return temp;
}
NODE insend(int item,NODE first)
{ NODE curr;
NODE temp=getnode();
temp->info=item;
temp->link=NULL;
if(first==NULL) return temp;
else
{
curr=first;
while(curr->link!=NULL)
{
curr=curr->link;
}
curr->link=temp;
return first;
}
}
NODE insnthposition(int item,NODE first,int pos)
{
NODE curr;
int i;
NODE temp=getnode();
temp->info=item;
curr=first;
for(i=0;i<(pos-2);i++)
curr=curr->link;
temp->link=curr->link;
curr->link=temp;
return first;
}


NODE delend(NODE first)
{
NODE prev,curr;
if(first==NULL)
{
printf("LIST EMPTY\n");
return first;
}
if(first->link==NULL)
{
printf("ITEM DELETED IS %d",first->info);
free(first);
return NULL;
}
prev=NULL;
curr=first;
while(curr->link!=NULL)
{
prev=curr;
curr=curr->link;
}
printf("ITEM DELETED IS %d",curr->info);
free(curr);
prev->link=NULL;
return first;
}
void display(NODE first)
{
NODE curr;
if(first==NULL)
{
printf("list empty");
return;
}
else
curr=first;
printf("CONTENTS OF LL ARE");
while(curr!=NULL)
{
printf("%d",curr->info);
curr=curr->link;
}
printf("\n");
}

void main()
{

NODE first;
int item,choice,pos;
first=NULL;
do
{
printf("1.INS nth pos 2.DEL end 3. DISPLAY\n 4.EXIT\n");
scanf("%d",&choice);

switch(choice)
{
case 1: printf("ENTER ITEM \n");
scanf("%d",&item);
printf("ENTER POSI\n");
scanf("%d",&pos);
if(pos==1)
first=insfront(item,first);
else
if(pos==SIZE-1)
first=insend(item,first);
else
first=insnthposition(item,first,pos);

break;

case 2:first= delend(first);
break;

case 3: display(first);
break;

case 4: exit(0);
default:printf("INVALID\n");
exit(0);
}
}while(choice<=4);

}
